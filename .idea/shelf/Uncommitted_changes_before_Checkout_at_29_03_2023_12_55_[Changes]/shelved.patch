Index: app/src/main/java/com/example/wanderlust/ui/screens/sign_in/SignInScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.ui.screens.sign_in\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardActions\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.input.ImeAction\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.constraintlayout.compose.ConstraintLayout\r\nimport androidx.navigation.NavController\r\nimport com.example.wanderlust.R\r\nimport com.example.wanderlust.navigation.Graph\r\nimport com.example.wanderlust.navigation.graphs.AuthScreen\r\nimport com.example.wanderlust.ui.theme.WanderlustTextStyles\r\nimport com.google.accompanist.systemuicontroller.rememberSystemUiController\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Preview\r\n@Composable\r\nfun SignInScreen(\r\n    onNavigateToSignUp: () -> Unit\r\n) {\r\n\r\n    ConstraintLayout(\r\n        Modifier\r\n            .background(MaterialTheme.colorScheme.primary)\r\n            .fillMaxSize()\r\n    ) {\r\n        val (text, column) = createRefs()\r\n        Text(\r\n            text = stringResource(id = R.string.sign_in),\r\n            modifier = Modifier.constrainAs(text) {\r\n                top.linkTo(parent.top, margin = 16.dp)\r\n                start.linkTo(parent.start)\r\n                end.linkTo(parent.end)\r\n            },\r\n            style = WanderlustTextStyles.AuthorizationMain\r\n        )\r\n\r\n        Column(\r\n            modifier = Modifier.constrainAs(column) {\r\n                top.linkTo(text.bottom, margin = 20.dp)\r\n                start.linkTo(parent.start)\r\n                end.linkTo(parent.end)\r\n            }\r\n        ) {\r\n            var value by remember { mutableStateOf(\"Hello\") }\r\n            Text(\r\n                text = stringResource(id = R.string.email),\r\n                style = WanderlustTextStyles.AuthorizationInputHint\r\n            )\r\n            TextField(\r\n                value = value,\r\n                onValueChange = { value = it },\r\n                shape = RoundedCornerShape(8.dp),\r\n                keyboardOptions = KeyboardOptions(\r\n                    keyboardType = KeyboardType.Text,\r\n                    imeAction = ImeAction.Done,\r\n                ),\r\n                singleLine = true,\r\n                textStyle = WanderlustTextStyles.AuthorizationInputInnerText,\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(horizontal = 16.dp, vertical = 8.dp),\r\n            )\r\n            Text(\r\n                text = \"Зарегистрироваться\",\r\n                style = WanderlustTextStyles.AuthorizationInputHint,\r\n                modifier = Modifier\r\n                    .clickable {\r\n                        onNavigateToSignUp()\r\n                    }\r\n            )\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/ui/screens/sign_in/SignInScreen.kt b/app/src/main/java/com/example/wanderlust/ui/screens/sign_in/SignInScreen.kt
--- a/app/src/main/java/com/example/wanderlust/ui/screens/sign_in/SignInScreen.kt	
+++ b/app/src/main/java/com/example/wanderlust/ui/screens/sign_in/SignInScreen.kt	
@@ -7,25 +7,18 @@
 import androidx.compose.foundation.layout.fillMaxWidth
 import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.foundation.text.KeyboardActions
 import androidx.compose.foundation.text.KeyboardOptions
 import androidx.compose.material3.*
 import androidx.compose.runtime.*
 import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.res.stringResource
-import androidx.compose.ui.text.TextStyle
 import androidx.compose.ui.text.input.ImeAction
 import androidx.compose.ui.text.input.KeyboardType
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.constraintlayout.compose.ConstraintLayout
-import androidx.navigation.NavController
 import com.example.wanderlust.R
-import com.example.wanderlust.navigation.Graph
-import com.example.wanderlust.navigation.graphs.AuthScreen
 import com.example.wanderlust.ui.theme.WanderlustTextStyles
-import com.google.accompanist.systemuicontroller.rememberSystemUiController
 
 @OptIn(ExperimentalMaterial3Api::class)
 @Preview
Index: app/src/main/java/com/example/wanderlust/navigation/graphs/AuthNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.navigation.graphs\r\n\r\nimport android.annotation.SuppressLint\r\nimport androidx.navigation.NavGraphBuilder\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.navigation\r\nimport com.example.wanderlust.navigation.Graph\r\nimport com.example.wanderlust.ui.screens.sign_in.SignInScreen\r\nimport com.example.wanderlust.ui.screens.sign_up.SignUpScreen\r\n\r\n@SuppressLint(\"ComposableNavGraphInComposeScope\")\r\nfun NavGraphBuilder.authNavGraph(navController: NavHostController) {\r\n    navigation(\r\n        route = Graph.AUTHENTICATION,\r\n        startDestination = AuthScreen.SignIn.route\r\n    ) {\r\n        composable(route = AuthScreen.SignIn.route) {\r\n            SignInScreen(onNavigateToSignUp = {\r\n                navController.navigate(AuthScreen.SignUp.route){\r\n                    navController.graph.route?.let { route ->\r\n                        popUpTo(route) {\r\n                            saveState = true\r\n                        }\r\n                    }\r\n                    launchSingleTop = true\r\n                    restoreState = true\r\n                }\r\n            })\r\n        }\r\n        composable(route = AuthScreen.SignUp.route) {\r\n            SignUpScreen(onNavigateToSignIn = {\r\n                navController.navigate(AuthScreen.SignIn.route){\r\n                    navController.graph.route?.let { route ->\r\n                        popUpTo(route) {\r\n                            saveState = true\r\n                        }\r\n                    }\r\n                    launchSingleTop = true\r\n                    restoreState = true\r\n                }\r\n            })\r\n        }\r\n        composable(route = AuthScreen.Forgot.route) {\r\n            //TODO\r\n        }\r\n    }\r\n\r\n}\r\n\r\nsealed class AuthScreen(val route: String) {\r\n    object SignIn : AuthScreen(route = \"sign_in\")\r\n    object SignUp : AuthScreen(route = \"sign_up\")\r\n    object Forgot : AuthScreen(route = \"forgot\") //TODO\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/navigation/graphs/AuthNavGraph.kt b/app/src/main/java/com/example/wanderlust/navigation/graphs/AuthNavGraph.kt
--- a/app/src/main/java/com/example/wanderlust/navigation/graphs/AuthNavGraph.kt	
+++ b/app/src/main/java/com/example/wanderlust/navigation/graphs/AuthNavGraph.kt	
@@ -5,7 +5,6 @@
 import androidx.navigation.NavHostController
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.navigation
-import com.example.wanderlust.navigation.Graph
 import com.example.wanderlust.ui.screens.sign_in.SignInScreen
 import com.example.wanderlust.ui.screens.sign_up.SignUpScreen
 
Index: app/src/main/java/com/example/wanderlust/navigation/graphs/RootNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.navigation\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.NavGraphBuilder\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.navigation\r\nimport com.example.wanderlust.navigation.graphs.*\r\nimport com.example.wanderlust.navigation.graphs.bottom_navigation.homeNavGraph\r\nimport com.example.wanderlust.navigation.graphs.bottom_navigation.mapNavGraph\r\nimport com.example.wanderlust.navigation.graphs.bottom_navigation.notificationsNavGraph\r\nimport com.example.wanderlust.navigation.graphs.bottom_navigation.profileNavGraph\r\n\r\n\r\n@Composable\r\nfun RootNavGraph(navController: NavHostController) {\r\n    NavHost(\r\n        navController = navController,\r\n        route = Graph.ROOT,\r\n        startDestination = Graph.BOTTOM) {\r\n\r\n        bottomNavGraph(navController = navController)\r\n\r\n        authNavGraph(navController = navController)\r\n    }\r\n}\r\n\r\n\r\nfun NavGraphBuilder.bottomNavGraph(navController: NavHostController) {\r\n    navigation(\r\n        route = Graph.BOTTOM,\r\n        startDestination = BottomNavigationItem.Home.graph\r\n    ) {\r\n\r\n        //Графы к каждой вкладке Bottom Navigation:\r\n        homeNavGraph(navController = navController)\r\n        mapNavGraph(navController = navController)\r\n        notificationsNavGraph(navController = navController)\r\n        profileNavGraph(navController = navController)\r\n\r\n        authNavGraph(navController = navController)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nobject Graph {\r\n    const val AUTHENTICATION = \"auth_graph\"\r\n    const val BOTTOM = \"bottom_graph\"\r\n    const val ROOT = \"root_graph\"\r\n}\r\n\r\n
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/navigation/graphs/RootNavGraph.kt b/app/src/main/java/com/example/wanderlust/navigation/graphs/RootNavGraph.kt
--- a/app/src/main/java/com/example/wanderlust/navigation/graphs/RootNavGraph.kt	
+++ b/app/src/main/java/com/example/wanderlust/navigation/graphs/RootNavGraph.kt	
@@ -1,11 +1,11 @@
-package com.example.wanderlust.navigation
+package com.example.wanderlust.navigation.graphs
 
 import androidx.compose.runtime.Composable
 import androidx.navigation.NavGraphBuilder
 import androidx.navigation.NavHostController
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.navigation
-import com.example.wanderlust.navigation.graphs.*
+import com.example.wanderlust.navigation.BottomNavigationItem
 import com.example.wanderlust.navigation.graphs.bottom_navigation.homeNavGraph
 import com.example.wanderlust.navigation.graphs.bottom_navigation.mapNavGraph
 import com.example.wanderlust.navigation.graphs.bottom_navigation.notificationsNavGraph
@@ -17,7 +17,8 @@
     NavHost(
         navController = navController,
         route = Graph.ROOT,
-        startDestination = Graph.BOTTOM) {
+        startDestination = Graph.BOTTOM
+    ) {
 
         bottomNavGraph(navController = navController)
 
Index: app/src/main/java/com/example/wanderlust/navigation/graphs/bottom_navigation/ProfileNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.navigation.graphs.bottom_navigation\r\n\r\nimport androidx.navigation.NavGraphBuilder\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.composable\r\nimport androidx.navigation.compose.navigation\r\nimport com.example.wanderlust.navigation.BottomNavigationItem\r\nimport com.example.wanderlust.navigation.Graph\r\nimport com.example.wanderlust.navigation.graphs.authNavGraph\r\nimport com.example.wanderlust.ui.screens.edit_profile.EditProfileScreen\r\nimport com.example.wanderlust.ui.screens.profile.ProfileScreen\r\n\r\nfun NavGraphBuilder.profileNavGraph(navController: NavHostController) {\r\n    navigation(\r\n        route = BottomNavigationItem.Profile.graph,\r\n        startDestination = BottomNavigationItem.Profile.route\r\n    ) {\r\n\r\n        composable(route = BottomNavigationItem.Profile.route) {\r\n            ProfileScreen(\r\n                onNavigateToSignIn = {navController.navigate(Graph.AUTHENTICATION)},\r\n                onNavigateToEditProfile = { navController.navigate(ProfileNavScreen.EditProfile.route)}\r\n            )\r\n        }\r\n\r\n        composable(route = ProfileNavScreen.EditProfile.route) {\r\n            EditProfileScreen()\r\n        }\r\n        authNavGraph(navController = navController)\r\n    }\r\n\r\n}\r\n\r\nsealed class ProfileNavScreen(val route: String) {\r\n    object EditProfile : ProfileNavScreen(route = \"edit_profile\")\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/navigation/graphs/bottom_navigation/ProfileNavGraph.kt b/app/src/main/java/com/example/wanderlust/navigation/graphs/bottom_navigation/ProfileNavGraph.kt
--- a/app/src/main/java/com/example/wanderlust/navigation/graphs/bottom_navigation/ProfileNavGraph.kt	
+++ b/app/src/main/java/com/example/wanderlust/navigation/graphs/bottom_navigation/ProfileNavGraph.kt	
@@ -5,7 +5,7 @@
 import androidx.navigation.compose.composable
 import androidx.navigation.compose.navigation
 import com.example.wanderlust.navigation.BottomNavigationItem
-import com.example.wanderlust.navigation.Graph
+import com.example.wanderlust.navigation.graphs.Graph
 import com.example.wanderlust.navigation.graphs.authNavGraph
 import com.example.wanderlust.ui.screens.edit_profile.EditProfileScreen
 import com.example.wanderlust.ui.screens.profile.ProfileScreen
Index: app/src/main/java/com/example/wanderlust/navigation/BottomNavigationBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.navigation\r\n\r\nimport android.util.Log\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.Add\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\nimport androidx.navigation.NavDestination.Companion.hierarchy\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport androidx.navigation.navArgument\r\nimport com.example.wanderlust.navigation.graphs.AuthScreen\r\n\r\n@Composable\r\nfun BottomNavigationBar(navController: NavController) {\r\n    val items = listOf(\r\n        BottomNavigationItem.Home,\r\n        BottomNavigationItem.Map,\r\n        BottomNavigationItem.Notifications,\r\n        BottomNavigationItem.Profile\r\n    )\r\n\r\n    val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n    val currentDestination = navBackStackEntry?.destination\r\n\r\n    NavigationBar(\r\n        modifier = Modifier.height(64.dp),\r\n        containerColor = MaterialTheme.colorScheme.surfaceVariant,\r\n    ){\r\n\r\n\r\n        items.forEach { item ->\r\n            NavigationBarItem(\r\n                modifier = Modifier.offset(\r\n                    when (item.title){\r\n                        \"Notifications\" -> 20.dp\r\n                        \"Map\" -> (-20).dp\r\n                        else -> 0.dp\r\n                    }\r\n                ),\r\n                icon = { Icon(\r\n                    painter = painterResource(id = item.icon),\r\n                    contentDescription = item.title,\r\n                    modifier = Modifier.size(27.dp))\r\n                },\r\n                colors = NavigationBarItemDefaults.colors(\r\n                    selectedIconColor = MaterialTheme.colorScheme.primary,\r\n                    unselectedIconColor = Color.Black.copy(0.4f),\r\n                    indicatorColor = MaterialTheme.colorScheme.surfaceVariant,\r\n                ),\r\n                alwaysShowLabel = false,\r\n                selected = currentDestination?.hierarchy?.any { it.route == item.route || it.route == item.graph} == true,\r\n                onClick = {\r\n\r\n                    navController.navigate(item.route) {\r\n                        navController.graph.startDestinationRoute?.let { route ->\r\n                            popUpTo(route) {\r\n                                saveState = true\r\n                            }\r\n                        }\r\n                        launchSingleTop = true\r\n                        restoreState = true\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun SetBottomNavigationBar(){\r\n    val navController = rememberNavController()\r\n    val fabShape = RoundedCornerShape(50)\r\n\r\n    val screensWithoutBottomBar = listOf(\r\n        AuthScreen.SignUp,\r\n        AuthScreen.SignIn\r\n    )\r\n    val hideBottomBar = navController\r\n        .currentBackStackEntryAsState().value?.destination?.route in screensWithoutBottomBar.map { it.route }\r\n\r\n    Scaffold(\r\n        bottomBar = {\r\n            if(!hideBottomBar)\r\n                BottomNavigationBar(navController = navController)\r\n                    },\r\n\r\n        floatingActionButton = {\r\n            if(!hideBottomBar) {\r\n            FloatingActionButton(\r\n                modifier = Modifier.offset(0.dp, 40.dp),\r\n                onClick = {\r\n                    //TODO\r\n                },\r\n                shape = fabShape,\r\n                containerColor = MaterialTheme.colorScheme.primary\r\n            ) {\r\n                Icon(Icons.Rounded.Add,\"\", modifier = Modifier.size(40.dp))\r\n            }\r\n            }\r\n        },\r\n        floatingActionButtonPosition = FabPosition.Center,\r\n\r\n        content = { padding ->\r\n            Box(Modifier.padding(bottom = padding.calculateBottomPadding())\r\n                ) {\r\n                RootNavGraph(navController = navController)\r\n            }\r\n        }\r\n    )\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/navigation/BottomNavigationBar.kt b/app/src/main/java/com/example/wanderlust/navigation/BottomNavigationBar.kt
--- a/app/src/main/java/com/example/wanderlust/navigation/BottomNavigationBar.kt	
+++ b/app/src/main/java/com/example/wanderlust/navigation/BottomNavigationBar.kt	
@@ -1,6 +1,5 @@
 package com.example.wanderlust.navigation
 
-import android.util.Log
 import androidx.compose.foundation.layout.*
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.material.icons.Icons
@@ -11,14 +10,13 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.navigation.NavController
 import androidx.navigation.NavDestination.Companion.hierarchy
 import androidx.navigation.compose.currentBackStackEntryAsState
 import androidx.navigation.compose.rememberNavController
-import androidx.navigation.navArgument
 import com.example.wanderlust.navigation.graphs.AuthScreen
+import com.example.wanderlust.navigation.graphs.RootNavGraph
 
 @Composable
 fun BottomNavigationBar(navController: NavController) {
Index: app/src/main/java/com/example/wanderlust/ui/screens/profile/ProfileScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.wanderlust.ui.screens.profile\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.constraintlayout.compose.ConstraintLayout\r\nimport androidx.navigation.NavHostController\r\nimport com.example.wanderlust.navigation.Graph\r\nimport com.example.wanderlust.ui.theme.WanderlustTextStyles\r\n//@Preview\r\n@Composable\r\nfun ProfileScreen(\r\n    onNavigateToEditProfile: () -> Unit,\r\n    onNavigateToSignIn: () -> Unit\r\n) {\r\n    ConstraintLayout(\r\n        Modifier\r\n            .background(Color.White)\r\n            .fillMaxSize()\r\n    ){\r\n        val (text, column) = createRefs()\r\n        Column(\r\n            modifier = Modifier.constrainAs(column) {\r\n                top.linkTo(text.bottom, margin = 20.dp)\r\n                start.linkTo(parent.start)\r\n                end.linkTo(parent.end)\r\n            }\r\n        ){\r\n            Text(text = \"Войти\",\r\n                modifier = Modifier\r\n                    .clickable {\r\n                        onNavigateToSignIn()\r\n                    }\r\n            )\r\n            Text(text = \"Редактировать Профиль\",\r\n                modifier = Modifier\r\n                    .clickable {\r\n                        onNavigateToEditProfile()\r\n                    }\r\n            )\r\n        }\r\n\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/wanderlust/ui/screens/profile/ProfileScreen.kt b/app/src/main/java/com/example/wanderlust/ui/screens/profile/ProfileScreen.kt
--- a/app/src/main/java/com/example/wanderlust/ui/screens/profile/ProfileScreen.kt	
+++ b/app/src/main/java/com/example/wanderlust/ui/screens/profile/ProfileScreen.kt	
@@ -9,9 +9,7 @@
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.unit.dp
 import androidx.constraintlayout.compose.ConstraintLayout
-import androidx.navigation.NavHostController
-import com.example.wanderlust.navigation.Graph
-import com.example.wanderlust.ui.theme.WanderlustTextStyles
+
 //@Preview
 @Composable
 fun ProfileScreen(
